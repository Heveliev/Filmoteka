{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAyEA,SAASC,EAAWC,GAChB,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAEpD,OAAOL,EAAaM,KAAI,SAAAC,G,OAAWN,EAAYM,E,IAAUC,KAAM,K,CAoCnE,SAASC,EAAmBC,GAE1B,OADkBR,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,IACpDM,MAAK,SAAAC,G,OAAQA,EAAKC,KAAOH,EAAKG,E,IAAM,sBAAwB,gB,CAGjF,SAASC,EAAmBJ,GAE1B,OADgBR,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,IAClDM,MAAK,SAAAC,G,OAAQA,EAAKC,KAAOH,EAAKG,E,IAAM,oBAAsB,c,CAlH7EhB,EAAAkB,KAAKC,SAASC,iBAAiB,SAG/B,SAAuBC,GACrBrB,EAAAkB,KAAKI,SAASC,UAAUC,OAAO,aAC/B,IAAMC,EAASJ,EAAIK,OAAOC,QAAQ,MAAMX,GAElCY,EADYvB,KAAKC,MAAMC,aAAaC,QAAQ,iBACrBM,MAAK,SAAAD,G,OAAQA,EAAKG,KAAOa,OAAOJ,E,IAYtCZ,EAVPe,EAWN5B,EAAAkB,KAAKY,cAAcC,UAAY,kGAKDC,OAHYnB,EAAKoB,YAAY,0HAS5BD,OANDnB,EAAKqB,MAAM,+QAQTF,OAFDnB,EAAKsB,aAAa,gFAQzCH,OANwBnB,EAAKuB,WAAW,sMAUxCJ,OAJAK,KAAKC,MAAMzB,EAAK0B,YAAY,8JAQ5BP,OAJAnB,EAAK2B,eAAe,qJAUxBR,OANI9B,EAAWW,EAAK4B,WAAW,mLAUKT,OAJpCnB,EAAK6B,SAAS,oIAKoBV,OADEpB,EAAmBC,GAAM,+DACFmB,OAAzBf,EAAmBJ,GAAM,+CAhDzEX,EAAW0B,EAAWa,WAgExB,SAA6B5B,GAC3B,IAAM8B,EAAeC,SAASC,cAAc,gBACtCC,EAAWF,SAASC,cAAc,cAElCE,EAAc,gBACdC,EAAY,cAKlB,SAASC,IACP,IAAIC,EAAc7C,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,GAClE0C,EAAYpC,MAAK,SAAAC,G,OAAQA,EAAKC,KAAOH,EAAKG,E,IAG7CkC,EAAcA,EAAYC,QAAO,SAAApC,G,OAAQA,EAAKC,KAAOH,EAAKG,E,IAF1DkC,EAAYE,KAAKvC,GAInBN,aAAa8C,QAAQN,EAAa1C,KAAKiD,UAAUJ,IACjDP,EAAaY,YAAc3C,EAAmBC,E,CAGhD,SAAS2C,IACP,IAAIC,EAAYpD,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,GAC9DiD,EAAU3C,MAAK,SAAAC,G,OAAQA,EAAKC,KAAOH,EAAKG,E,IAG3CyC,EAAYA,EAAUN,QAAO,SAAApC,G,OAAQA,EAAKC,KAAOH,EAAKG,E,IAFtDyC,EAAUL,KAAKvC,GAIjBN,aAAa8C,QAAQL,EAAW3C,KAAKiD,UAAUG,IAC/CX,EAASS,YAActC,EAAmBJ,E,CAtB5C8B,EAAavB,iBAAiB,QAAS6B,GACvCH,EAAS1B,iBAAiB,QAASoC,E,CAvEnCE,CAAoB9B,GAQtB,IAAyBf,C,IAlBzBb,EAAAkB,KAAKyC,SAASvC,iBAAiB,SAa/B,WACEpB,EAAAkB,KAAKI,SAASC,UAAUqC,IAAI,aAkDrB5D,EAAAkB,KAAKY,cAAcC,UAAY,E","sources":["src/js/modalFilm/renderModalFilm.js"],"sourcesContent":["import {refs} from '../refs/refs';\n\n\n\n\nrefs.filmCard.addEventListener(\"click\", openModalFilm);\nrefs.closeBtn.addEventListener(\"click\", closeModalFilm);\n\nfunction openModalFilm(evt) {\n  refs.backdrop.classList.remove(\"is-hidden\");\n  const filmId = evt.target.closest(\"li\").id;\n  const filmArray = JSON.parse(localStorage.getItem(\"saved-movies\"));\n  const filmOpened = filmArray.find(film => film.id === Number(filmId));\n\n  renderModalFilm(filmOpened);\n  findGenres(filmOpened.genre_ids);\n  localStorageHandler(filmOpened);\n}\n\nfunction closeModalFilm() {\n  refs.backdrop.classList.add(\"is-hidden\");\n  clearModelFilm();\n}\n\nfunction renderModalFilm(film) {\n    return (refs.filmRendering.innerHTML = `\n        <div class=\"modal-img-wrapper\">\n          <img src=\"https://image.tmdb.org/t/p/w500/${film.poster_path}\" alt=\"film-poster\" />\n        </div>\n        <div class=\"modal__wrapper\">\n          <h2 class=\"modal__film-title\">${film.title}</h2>\n          <table class=\"modal__table\">\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Vote / Votes</td>\n              <td>\n                <div class=\"modal__vote-wrapper\">\n                  <p class=\"modal__vote\">${film.vote_average}</p>\n                  <p>/</p>\n                  <p class=\"modal__votes\">${film.vote_count}</p>\n                </div>\n              </td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Popularity</td>\n              <td>${Math.round(film.popularity)}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Original Title</td>\n              <td>${film.original_title}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Genre</td>\n              <td>${findGenres(film.genre_ids)}</td>\n            </tr>\n          </table>\n          <div>\n            <h3 class=\"modal__about-title\">About</h3>\n            <p class=\"modal__about-film\">\n              ${film.overview}\n            </p>\n          </div>\n          <div class=\"modal__buttons\">\n            <button class=\"modal-btn btn-watched\">${getWatchActionText(film)}</button>\n            <button class=\"modal-btn btn-queue\">${getQueueActiontext(film)}</button>\n          </div>\n        </div>`\n    )\n}\n\nfunction clearModelFilm() {\n  return refs.filmRendering.innerHTML = \"\";\n}\n\nfunction findGenres(filmGenreIds) {\n    const savedGenres = JSON.parse(localStorage.getItem('saved-genres'));\n    // return textGenres = filmGenreIds.map(genreId => savedGenres[genreId]).join(`, `);\n    return filmGenreIds.map(genreId => savedGenres[genreId]).join(`, `);\n} \n\nfunction localStorageHandler(film) {\n  const toWatchedBtn = document.querySelector(\".btn-watched\");\n  const queueBtn = document.querySelector(\".btn-queue\");\n\n  const WATCHED_KEY = \"watched-films\";\n  const QUEUE_KEY = \"queue-films\";\n\n  toWatchedBtn.addEventListener(\"click\", addToWatched);\n  queueBtn.addEventListener(\"click\", addToQueue);\n\n  function addToWatched() {\n    let watchedData = JSON.parse(localStorage.getItem(\"watched-films\")) || [];\n    if (!watchedData.find(item => item.id === film.id)) {\n      watchedData.push(film);\n    } else {\n      watchedData = watchedData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(WATCHED_KEY, JSON.stringify(watchedData));\n    toWatchedBtn.textContent = getWatchActionText(film);\n  }\n\n  function addToQueue() {\n    let queueData = JSON.parse(localStorage.getItem(\"queue-films\")) || [];\n    if (!queueData.find(item => item.id === film.id)) {\n      queueData.push(film);\n    } else {\n      queueData = queueData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(QUEUE_KEY, JSON.stringify(queueData));\n    queueBtn.textContent = getQueueActiontext(film);\n  }\n}\n\nfunction getWatchActionText(film) {\n  let watchedData = JSON.parse(localStorage.getItem(\"watched-films\")) || [];\n  return watchedData.find(item => item.id === film.id) ? \"REMOVE FROM WATCHED\" : \"ADD TO WATCHED\";\n}\n\nfunction getQueueActiontext(film) {\n  let queueData = JSON.parse(localStorage.getItem(\"queue-films\")) || [];\n  return queueData.find(item => item.id === film.id) ? \"REMOVE FROM QUEUE\" : \"ADD TO QUEUE\";\n}\n\n\n"],"names":["$cqmI4","parcelRequire","$5557f7ac708bd72e$var$findGenres","filmGenreIds","savedGenres","JSON","parse","localStorage","getItem","map","genreId","join","$5557f7ac708bd72e$var$getWatchActionText","film","find","item","id","$5557f7ac708bd72e$var$getQueueActiontext","refs","filmCard","addEventListener","evt","backdrop","classList","remove","filmId","target","closest","filmOpened","Number","filmRendering","innerHTML","concat","poster_path","title","vote_average","vote_count","Math","round","popularity","original_title","genre_ids","overview","toWatchedBtn","document","querySelector","queueBtn","WATCHED_KEY","QUEUE_KEY","addToWatched","watchedData","filter","push","setItem","stringify","textContent","addToQueue","queueData","$5557f7ac708bd72e$var$localStorageHandler","closeBtn","add"],"version":3,"file":"index.f26992ee.js.map"}