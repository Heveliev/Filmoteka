{"mappings":"AAAA,MAAMA,EAAWC,SAASC,cAAc,qBAClCC,EAAWF,SAASC,cAAc,wBAClCE,EAAgBH,SAASC,cAAc,uBAsB7C,SAASG,EAAeC,IAClBA,EAAIC,OAAOC,QAAQ,sBACrBF,EAAIC,OAAOC,QAAQ,2BACnBF,EAAIC,OAAOC,QAAQ,+BACnBF,EAAIC,OAAOC,QAAQ,yBACN,WAAbF,EAAIG,QACRN,EAASO,UAAUC,IAAI,aACnBV,SAASW,KAAKC,MAAMC,SAAW,OAmD1BV,EAAcW,UAAY,G,CAGnC,SAASC,EAAWC,GAChB,MAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBACpD,OAAOL,EAAaM,KAAIC,GAAWN,EAAYM,KAAUC,KAAK,K,CAoClE,SAASC,EAAmBC,GAE1B,OADkBR,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,IACpDM,MAAKC,GAAQA,EAAKC,KAAOH,EAAKG,KAAM,sBAAwB,gB,CAGjF,SAASC,EAAmBJ,GAE1B,OADgBR,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,IAClDM,MAAKC,GAAQA,EAAKC,KAAOH,EAAKG,KAAM,oBAAsB,c,CA9H7E9B,EAASgC,iBAAiB,SAG1B,SAAuB1B,GACvBH,EAASO,UAAUuB,OAAO,aACxBhC,SAASW,KAAKC,MAAMC,SAAW,SAE/B,MAAMoB,EAAS5B,EAAIC,OAAO4B,QAAQ,MAAML,GAElCM,EADYjB,KAAKC,MAAMC,aAAaC,QAAQ,iBACrBM,MAAKD,GAAQA,EAAKG,KAAOO,OAAOH,KAuBlCP,EArBPS,EAsBVhC,EAAcW,UAAY,kGAEgBY,EAAKW,oIAGjBX,EAAKY,mRAMJZ,EAAKa,2FAEJb,EAAKc,+MAM7BC,KAAKC,MAAwB,GAAlBhB,EAAKiB,YAAiB,+JAIjCjB,EAAKkB,kKAIL7B,EAAWW,EAAKmB,4LAMpBnB,EAAKoB,2IAI+BrB,EAAmBC,gEACrBI,EAAmBJ,gDA3DnEX,EAAWoB,EAAWU,WA0ExB,SAA6BnB,GAC3B,MAAMqB,EAAe/C,SAASC,cAAc,gBACtC+C,EAAWhD,SAASC,cAAc,cAElCgD,EAAc,gBACdC,EAAY,cAKlB,SAASC,IACP,IAAIC,EAAclC,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,GAClE+B,EAAYzB,MAAKC,GAAQA,EAAKC,KAAOH,EAAKG,KAG7CuB,EAAcA,EAAYC,QAAOzB,GAAQA,EAAKC,KAAOH,EAAKG,KAF1DuB,EAAYE,KAAK5B,GAInBN,aAAamC,QAAQN,EAAa/B,KAAKsC,UAAUJ,IACjDL,EAAaU,YAAchC,EAAmBC,E,CAGhD,SAASgC,IACP,IAAIC,EAAYzC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,GAC9DsC,EAAUhC,MAAKC,GAAQA,EAAKC,KAAOH,EAAKG,KAG3C8B,EAAYA,EAAUN,QAAOzB,GAAQA,EAAKC,KAAOH,EAAKG,KAFtD8B,EAAUL,KAAK5B,GAIjBN,aAAamC,QAAQL,EAAWhC,KAAKsC,UAAUG,IAC/CX,EAASS,YAAc3B,EAAmBJ,E,CAtB5CqB,EAAahB,iBAAiB,QAASoB,GACvCH,EAASjB,iBAAiB,QAAS2B,E,CAjFnCE,CAAoBzB,GAEpBnC,SAAS+B,iBAAiB,QAAS3B,GACnCyD,OAAO9B,iBAAiB,UAAW3B,GAgBrC,IAA6BsB,C","sources":["src/js/modalFilm/renderModalFIlmLibr.js"],"sourcesContent":["const librList = document.querySelector('.films__list-libr');\nconst backdrop = document.querySelector('.backdrop-modal-film');\nconst filmRendering = document.querySelector('.film-render-markup');\n\nlibrList.addEventListener(\"click\", openModalFilm);\n\n\nfunction openModalFilm(evt) {\nbackdrop.classList.remove(\"is-hidden\");\n  document.body.style.overflow = 'hidden';\n\n  const filmId = evt.target.closest(\"li\").id;\n  const filmArray = JSON.parse(localStorage.getItem(\"saved-movies\"));\n  const filmOpened = filmArray.find(film => film.id === Number(filmId));\n\n  renderModalFilmLibr(filmOpened);\n  findGenres(filmOpened.genre_ids);\n  localStorageHandler(filmOpened);\n\n  document.addEventListener(\"click\", closeModalFilm);\n  window.addEventListener(\"keydown\", closeModalFilm);\n\n}\n\nfunction closeModalFilm(evt) {\n  if (evt.target.matches(\".modal__close-btn\") ||\n    evt.target.matches(\".modal__close-btn-icon\") ||\n    evt.target.matches(\".modal__close-btn-icon-svg\") ||\n    evt.target.matches(\".backdrop-modal-film\") ||\n    evt.code === \"Escape\") {\nbackdrop.classList.add(\"is-hidden\");\n    document.body.style.overflow = 'auto';\n    clearModalFilm();\n  }\n}\n\nfunction renderModalFilmLibr(film) {\n    return (filmRendering.innerHTML = `\n        <div class=\"modal-img-wrapper\">\n          <img src=\"https://image.tmdb.org/t/p/w500/${film.poster_path}\" alt=\"film-poster\" />\n        </div>\n        <div class=\"modal__wrapper\">\n          <h2 class=\"modal__film-title\">${film.title}</h2>\n          <table class=\"modal__table\">\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Vote / Votes</td>\n              <td>\n                <div class=\"modal__vote-wrapper\">\n                  <p class=\"modal__vote\">${film.vote_average}</p>\n                  <p>/</p>\n                  <p class=\"modal__votes\">${film.vote_count}</p>\n                </div>\n              </td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Popularity</td>\n              <td>${Math.round(film.popularity * 10)/10}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Original Title</td>\n              <td>${film.original_title}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Genre</td>\n              <td>${findGenres(film.genre_ids)}</td>\n            </tr>\n          </table>\n          <div>\n            <h3 class=\"modal__about-title\">About</h3>\n            <p class=\"modal__about-film\">\n              ${film.overview}\n            </p>\n          </div>\n          <div class=\"modal__buttons\">\n            <button class=\"modal-btn btn-watched\">${getWatchActionText(film)}</button>\n            <button class=\"modal-btn btn-queue\">${getQueueActiontext(film)}</button>\n          </div>\n        </div>`\n    )\n}\n\nfunction clearModalFilm() {\n  return filmRendering.innerHTML = \"\";\n}\n\nfunction findGenres(filmGenreIds) {\n    const savedGenres = JSON.parse(localStorage.getItem('saved-genres'));\n    return filmGenreIds.map(genreId => savedGenres[genreId]).join(`, `);\n} \n\nfunction localStorageHandler(film) {\n  const toWatchedBtn = document.querySelector(\".btn-watched\");\n  const queueBtn = document.querySelector(\".btn-queue\");\n\n  const WATCHED_KEY = \"watched-films\";\n  const QUEUE_KEY = \"queue-films\";\n\n  toWatchedBtn.addEventListener(\"click\", addToWatched);\n  queueBtn.addEventListener(\"click\", addToQueue);\n\n  function addToWatched() {\n    let watchedData = JSON.parse(localStorage.getItem(\"watched-films\")) || [];\n    if (!watchedData.find(item => item.id === film.id)) {\n      watchedData.push(film);\n    } else {\n      watchedData = watchedData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(WATCHED_KEY, JSON.stringify(watchedData));\n    toWatchedBtn.textContent = getWatchActionText(film);\n  }\n\n  function addToQueue() {\n    let queueData = JSON.parse(localStorage.getItem(\"queue-films\")) || [];\n    if (!queueData.find(item => item.id === film.id)) {\n      queueData.push(film);\n    } else {\n      queueData = queueData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(QUEUE_KEY, JSON.stringify(queueData));\n    queueBtn.textContent = getQueueActiontext(film);\n  }\n}\n\nfunction getWatchActionText(film) {\n  let watchedData = JSON.parse(localStorage.getItem(\"watched-films\")) || [];\n  return watchedData.find(item => item.id === film.id) ? \"REMOVE FROM WATCHED\" : \"ADD TO WATCHED\";\n}\n\nfunction getQueueActiontext(film) {\n  let queueData = JSON.parse(localStorage.getItem(\"queue-films\")) || [];\n  return queueData.find(item => item.id === film.id) ? \"REMOVE FROM QUEUE\" : \"ADD TO QUEUE\";\n}"],"names":["$51418ab914c3db48$var$librList","document","querySelector","$51418ab914c3db48$var$backdrop","$51418ab914c3db48$var$filmRendering","$51418ab914c3db48$var$closeModalFilm","evt","target","matches","code","classList","add","body","style","overflow","innerHTML","$51418ab914c3db48$var$findGenres","filmGenreIds","savedGenres","JSON","parse","localStorage","getItem","map","genreId","join","$51418ab914c3db48$var$getWatchActionText","film","find","item","id","$51418ab914c3db48$var$getQueueActiontext","addEventListener","remove","filmId","closest","filmOpened","Number","poster_path","title","vote_average","vote_count","Math","round","popularity","original_title","genre_ids","overview","toWatchedBtn","queueBtn","WATCHED_KEY","QUEUE_KEY","addToWatched","watchedData","filter","push","setItem","stringify","textContent","addToQueue","queueData","$51418ab914c3db48$var$localStorageHandler","window"],"version":3,"file":"library.e012d48c.js.map"}