{"mappings":"YAEA,IAAMA,EAAO,CAEXC,WAAYC,SAASC,cAAc,gBACnCC,KAAMF,SAASC,cAAc,gBAC7BE,eAAgBH,SAASC,cAAc,uBACvCG,cAAeJ,SAASC,cAAc,sBACtCI,SAAUL,SAASC,cAAc,wBACjCK,SAAUN,SAASC,cAAc,qBACjCM,cAAeP,SAASC,cAAc,wBCRjC,SAASO,EAAkBC,GAChC,OAAQX,EAAKC,WAAWW,UAAYD,EACjCE,KACC,SAAAC,G,MAAS,WAESC,OAFED,EAAME,GAAG,oGAUCD,QAgDZE,EAvDVH,EAAMI,YAwDbD,EAGI,mCAA8CF,OAAXE,GAFnC,yDAxDG,0TAQyCF,OAFnBD,EAAMK,MAAM,uGAKRJ,OAOjC,SAAkCD,GASvC,IANA,IAAMM,EAAcC,aAAaC,QAAQ,gBACnCC,EAASC,KAAKC,MAAML,GAEtBM,EAAc,GACZC,EAAmBb,EAAMc,aAAaC,MAAM,EAAG,GAE5CC,EAAI,EAAGA,EAAIhB,EAAMiB,UAAUC,OAAQF,IAC1CJ,EAAYO,KAAKV,EAAOT,EAAMiB,UAAUD,KAG1C,IAAII,EAAqB,GAGvBA,EADER,EAAYM,OAAS,EACFN,EAAYS,OAAO,EAAG,GAAGC,KAAK,MAAQ,UAEtCV,EAAYU,KAAK,MAGxC,OAA+B,IAA3BtB,EAAMiB,UAAUC,QAAiBlB,EAAMc,aAIZ,IAA3Bd,EAAMiB,UAAUC,QAAgBlB,EAAMc,aACjCD,EAGsB,IAA3Bb,EAAMiB,UAAUC,QAAiBlB,EAAMc,aAIpCM,EAAqB,MAAQP,EAH3BO,EARA,E,CAhC4CG,CACzCvB,GACA,gDACwDC,OAA9BD,EAAMwB,aAAaC,QAAQ,GAAG,4CA2CtE,IAAwBtB,C,IAvCnBmB,KAAK,G,CCtBV,IAAMI,EAAatC,SAASC,cAAc,gBACpCsC,EAAUvC,SAASC,cAAc,kBACjCuC,EAAQxC,SAASC,cAAc,gBAC/BwC,EAAUzC,SAASC,cAAc,gBAEnCyC,EAAM,cACVF,EAAMG,UAAUC,IAAI,gBACpB,IAAMC,EAAO1B,aAAaC,QAAQsB,GAC5BI,EAAYxB,KAAKC,MAAMsB,GAE7B,GAAKC,EAAUhB,OAGb,IACEtB,EAAkBsC,E,CAClB,MAAOC,GACPC,EAASN,E,MALXM,EAASN,GA6BX,SAASM,EAASC,GAChB,OAAQX,EAAW5B,UAAY,wNAEkBG,OAAJoC,EAAI,S,CAvBnDR,EAAQS,iBAAiB,SAEzB,SAAoBC,GAClBA,EAAEC,iBACFV,EAAMS,EAAEE,OAAOvC,GACfwC,QAAQC,IAAIb,GAsBd,SAA2B5B,GACrBA,IAAOyB,EAAQzB,KACjB0B,EAAMG,UAAUa,OAAO,gBACvBjB,EAAQI,UAAUC,IAAI,gBACtBJ,EAAMiB,gBAAgB,YACtBlB,EAAQmB,aAAa,WAAY,aAG/B5C,IAAO0B,EAAM1B,KACfyB,EAAQI,UAAUa,OAAO,gBACzBhB,EAAMG,UAAUC,IAAI,gBACpBL,EAAQkB,gBAAgB,YACxBjB,EAAMkB,aAAa,WAAY,Y,CAjCjCC,CAAkBjB,GAClB,IAAMkB,EAAOzC,aAAaC,QAAQsB,GAC5BmB,EAAYvC,KAAKC,MAAMqC,GAC7B,GAAKC,EAAU/B,OAGb,IACEtB,EAAkBqD,E,CAClB,MAAOd,GACPC,EAASN,E,MALXM,EAASN,E","sources":["src/js/refs/refs.js","src/js/createMoviesMarkup/renderMoviesCards.js","src/js/renderQueueWatchedFilms/renderQueueWachedFilms.js"],"sourcesContent":["export { refs };\n\nconst refs = {\n  // searchInput: document.querySelector(input),\n  moviesList: document.querySelector('.films__list'),\n  form: document.querySelector('.header-form'),\n  failureMassege: document.querySelector('.js-failure-massege'),\n  paginationBox: document.querySelector('.page-number__list'),\n  backdrop: document.querySelector('.backdrop-modal-film'),\n  closeBtn: document.querySelector('.modal__close-btn'),\n  filmRendering: document.querySelector('.film-render-markup'),\n};\n","import { refs } from '../refs/refs';\n\nexport function renderMoviesCards(moviesObjects) {\n  return (refs.moviesList.innerHTML = moviesObjects\n    .map(\n      movie => `<li id='${movie.id}' class=\"films__card\">\n          <div class=\"films__overflow-wrapper\">\n            <img src=\"${checkPosterImg(\n              movie.poster_path\n            )}\"  alt=\"film poster\" class=\"films__picture\" />\n              <div class=\"films__overlay\">\n              <p class=\"films__trailer-text\">Watch trailer</p>\n              <!-- <img src=\"\" alt=\"test\" class=\"films__trailer-icon\"> -->\n            </div>\n          </div>\n          <p class=\"films__title\">${movie.title}</p>\n          <div class=\"films__details\">\n            <p class=\"films__genres film-font-style\">${createMovieDetalisMarkup(\n              movie\n            )}</p>\n            <span class=\"films__rate\">${movie.vote_average.toFixed(1)}</span>\n          </div>\n        </li>`\n    )\n    .join(''));\n}\n\nexport function createMovieDetalisMarkup(movie) {\n  // console.log(movie.id);\n\n  const savedGenres = localStorage.getItem('saved-genres');\n  const genres = JSON.parse(savedGenres);\n\n  let movieGenres = [];\n  const movieReleaseYear = movie.release_date.slice(0, 4);\n\n  for (let i = 0; i < movie.genre_ids.length; i++) {\n    movieGenres.push(genres[movie.genre_ids[i]]);\n  }\n\n  let moviesGenresMarkup = '';\n\n  if (movieGenres.length > 2) {\n    moviesGenresMarkup = movieGenres.splice(0, 2).join(', ') + ', Other';\n  } else {\n    moviesGenresMarkup = movieGenres.join(', ');\n  }\n\n  if (movie.genre_ids.length === 0 && !movie.release_date) {\n    return '';\n  }\n\n  if (movie.genre_ids.length === 0 && movie.release_date) {\n    return movieReleaseYear;\n  }\n\n  if (movie.genre_ids.length !== 0 && !movie.release_date) {\n    return moviesGenresMarkup;\n  }\n\n  return moviesGenresMarkup + ' | ' + movieReleaseYear;\n}\n\nfunction checkPosterImg(posterPath) {\n  if (!posterPath) {\n    return 'https://i.postimg.cc/KYV47028/no-poster-available.jpg';\n  } else {\n    return `https://image.tmdb.org/t/p/w500/${posterPath}`;\n  }\n}\n","// import { refs } from '../refs/refs';\nimport { renderMoviesCards } from '../createMoviesMarkup/renderMoviesCards';\nconst moviesList = document.querySelector('.films__list');\nconst watched = document.querySelector('.watched-films');\nconst queue = document.querySelector('.queue-films');\nconst btnList = document.querySelector('.button-list');\n\nlet key = 'queue-films';\nqueue.classList.add('current-page');\nconst resp = localStorage.getItem(key);\nconst parseResp = JSON.parse(resp);\n\nif (!parseResp.length) {\n  fooError(key);\n} else {\n  try {\n    renderMoviesCards(parseResp);\n  } catch (error) {\n    fooError(key);\n  }\n}\n\nbtnList.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(e) {\n  e.preventDefault();\n  key = e.target.id;\n  console.dir(key);\n  selectCurrentPage(key);\n  const resp = localStorage.getItem(key);\n  const parseResp = JSON.parse(resp);\n  if (!parseResp.length) {\n    fooError(key);\n  } else {\n    try {\n      renderMoviesCards(parseResp);\n    } catch (error) {\n      fooError(key);\n    }\n  }\n}\n\nfunction fooError(key) {\n  return (moviesList.innerHTML = `\n  <img src=\"https://kartinkof.club/uploads/posts/2022-03/1648361803_4-kartinkof-club-p-mem-obezyana-smotrit-v-storonu-5.jpg\" alt=\"monkey\" width=\"400\" height=\"200\">\n  <p>Opss... you haven't added any movies to ${key}</p>\n`);\n}\n\nfunction selectCurrentPage(id) {\n  if (id === watched.id) {\n    queue.classList.remove('current-page');\n    watched.classList.add('current-page');\n    queue.removeAttribute('disabled');\n    watched.setAttribute('disabled', 'disabled');\n  }\n\n  if (id === queue.id) {\n    watched.classList.remove('current-page');\n    queue.classList.add('current-page');\n    watched.removeAttribute('disabled');\n    queue.setAttribute('disabled', 'disabled');\n  }\n}\n"],"names":["$90b98774a6cf815d$export$21666b427502ea6d","moviesList","document","querySelector","form","failureMassege","paginationBox","backdrop","closeBtn","filmRendering","$6a73086ed4749c7f$export$3cfafeb53fa7e261","moviesObjects","innerHTML","map","movie","concat","id","posterPath","poster_path","title","savedGenres","localStorage","getItem","genres","JSON","parse","movieGenres","movieReleaseYear","release_date","slice","i","genre_ids","length","push","moviesGenresMarkup","splice","join","$6a73086ed4749c7f$export$9b3fe9cbd59bab40","vote_average","toFixed","$14dc96e71a332ac5$var$moviesList","$14dc96e71a332ac5$var$watched","$14dc96e71a332ac5$var$queue","$14dc96e71a332ac5$var$btnList","$14dc96e71a332ac5$var$key","classList","add","$14dc96e71a332ac5$var$resp","$14dc96e71a332ac5$var$parseResp","error","$14dc96e71a332ac5$var$fooError","key1","addEventListener","e","preventDefault","target","console","dir","remove","removeAttribute","setAttribute","$14dc96e71a332ac5$var$selectCurrentPage","resp1","parseResp1"],"version":3,"file":"library.4f07853c.js.map"}