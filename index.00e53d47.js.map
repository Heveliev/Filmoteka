{"mappings":"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","sources":["src/js/modalFilm/renderModalFilm.js"],"sourcesContent":["import {refs} from '../refs/refs';\n\nrefs.filmCard.addEventListener(\"click\", openModalFilm);\n\n\nfunction openModalFilm(evt) {\n  refs.backdrop.classList.remove(\"is-hidden\");\n  document.body.style.overflow = 'hidden';\n\n  const filmId = evt.target.closest(\"li\").id;\n  const filmArray = JSON.parse(localStorage.getItem(\"saved-movies\"));\n  const filmOpened = filmArray.find(film => film.id === Number(filmId));\n\n  renderModalFilm(filmOpened);\n  findGenres(filmOpened.genre_ids);\n  localStorageHandler(filmOpened);\n\n  document.addEventListener(\"click\", closeModalFilm);\n  window.addEventListener(\"keydown\", closeModalFilm);\n\n}\n\nfunction closeModalFilm(evt) {\n  if (evt.target.matches(\".modal__close-btn\") ||\n    evt.target.matches(\".modal__close-btn-icon\") ||\n    evt.target.matches(\".modal__close-btn-icon-svg\") ||\n    evt.target.matches(\".backdrop-modal-film\") ||\n    evt.code === \"Escape\") {\n    refs.backdrop.classList.add(\"is-hidden\");\n    document.body.style.overflow = 'auto';\n    clearModalFilm();\n  }\n}\n\nfunction renderModalFilm(film) {\n    return (refs.filmRendering.innerHTML = `\n        <div class=\"modal-img-wrapper\">\n          <img src=\"https://image.tmdb.org/t/p/w500/${film.poster_path}\" alt=\"film-poster\" />\n        </div>\n        <div class=\"modal__wrapper\">\n          <h2 class=\"modal__film-title\">${film.title}</h2>\n          <table class=\"modal__table\">\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Vote / Votes</td>\n              <td>\n                <div class=\"modal__vote-wrapper\">\n                  <p class=\"modal__vote\">${film.vote_average}</p>\n                  <p>/</p>\n                  <p class=\"modal__votes\">${film.vote_count}</p>\n                </div>\n              </td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Popularity</td>\n              <td>${Math.round(film.popularity * 10)/10}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Original Title</td>\n              <td>${film.original_title}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Genre</td>\n              <td>${findGenres(film.genre_ids)}</td>\n            </tr>\n          </table>\n          <div>\n            <h3 class=\"modal__about-title\">About</h3>\n            <p class=\"modal__about-film\">\n              ${film.overview}\n            </p>\n          </div>\n          <div class=\"modal__buttons\">\n            <button class=\"modal-btn btn-watched\">${getWatchActionText(film)}</button>\n            <button class=\"modal-btn btn-queue\">${getQueueActiontext(film)}</button>\n          </div>\n        </div>`\n    )\n}\n\nfunction clearModalFilm() {\n  return refs.filmRendering.innerHTML = \"\";\n}\n\nfunction findGenres(filmGenreIds) {\n    const savedGenres = JSON.parse(localStorage.getItem('saved-genres'));\n    return filmGenreIds.map(genreId => savedGenres[genreId]).join(`, `);\n} \n\nfunction localStorageHandler(film) {\n  const toWatchedBtn = document.querySelector(\".btn-watched\");\n  const queueBtn = document.querySelector(\".btn-queue\");\n\n  const WATCHED_KEY = \"watched-films\";\n  const QUEUE_KEY = \"queue-films\";\n\n  toWatchedBtn.addEventListener(\"click\", addToWatched);\n  queueBtn.addEventListener(\"click\", addToQueue);\n\n  function addToWatched() {\n    let watchedData = JSON.parse(localStorage.getItem(\"watched-films\")) || [];\n    if (!watchedData.find(item => item.id === film.id)) {\n      watchedData.push(film);\n    } else {\n      watchedData = watchedData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(WATCHED_KEY, JSON.stringify(watchedData));\n    toWatchedBtn.textContent = getWatchActionText(film);\n  }\n\n  function addToQueue() {\n    let queueData = JSON.parse(localStorage.getItem(\"queue-films\")) || [];\n    if (!queueData.find(item => item.id === film.id)) {\n      queueData.push(film);\n    } else {\n      queueData = queueData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(QUEUE_KEY, JSON.stringify(queueData));\n    queueBtn.textContent = getQueueActiontext(film);\n  }\n}\n\nfunction getWatchActionText(film) {\n  let watchedData = JSON.parse(localStorage.getItem(\"watched-films\")) || [];\n  return watchedData.find(item => item.id === film.id) ? \"REMOVE FROM WATCHED\" : \"ADD TO WATCHED\";\n}\n\nfunction getQueueActiontext(film) {\n  let queueData = JSON.parse(localStorage.getItem(\"queue-films\")) || [];\n  return queueData.find(item => item.id === film.id) ? \"REMOVE FROM QUEUE\" : \"ADD TO QUEUE\";\n}\n\n\n"],"names":["$cqmI4","parcelRequire","$5557f7ac708bd72e$var$closeModalFilm","evt","target","matches","code","refs","backdrop","classList","add","document","body","style","overflow","filmRendering","innerHTML","$5557f7ac708bd72e$var$findGenres","filmGenreIds","savedGenres","JSON","parse","localStorage","getItem","map","genreId","join","$5557f7ac708bd72e$var$getWatchActionText","film","find","item","id","$5557f7ac708bd72e$var$getQueueActiontext","filmCard","addEventListener","remove","filmId","closest","filmOpened","Number","concat","poster_path","title","vote_average","vote_count","Math","round","popularity","original_title","genre_ids","overview","toWatchedBtn","querySelector","queueBtn","WATCHED_KEY","QUEUE_KEY","addToWatched","watchedData","filter","push","setItem","stringify","textContent","addToQueue","queueData","$5557f7ac708bd72e$var$localStorageHandler","window"],"version":3,"file":"index.00e53d47.js.map"}