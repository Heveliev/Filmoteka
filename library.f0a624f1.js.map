{"mappings":"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","sources":["src/js/refs/refs.js","src/js/createMoviesMarkup/renderMoviesCards.js","src/js/renderQueueWatchedFilms/renderQueueWachedFilms.js","src/js/modalFilm/renderModalFilm.js"],"sourcesContent":["export { refs };\n\nconst refs = {\n  // searchInput: document.querySelector(input),\n  moviesList: document.querySelector('.films__list'),\n  form: document.querySelector('.header-form'),\n  failureMassege: document.querySelector('.js-failure-massege'),\n  paginationBox: document.querySelector('.page-number__list'),\n  backdrop: document.querySelector('.backdrop-modal-film'),\n  closeBtn: document.querySelector('.modal__close-btn'),\n  filmRendering: document.querySelector('.film-render-markup'),\n};\n","import { refs } from '../refs/refs';\n\nexport function renderMoviesCards(moviesObjects) {\n  return (refs.moviesList.innerHTML = moviesObjects\n    .map(\n      movie => `<li id='${movie.id}' class=\"films__card\">\n          <div class=\"films__overflow-wrapper\">\n            <img src=\"${checkPosterImg(\n              movie.poster_path\n            )}\"  alt=\"film poster\" class=\"films__picture\" />\n              <div class=\"films__overlay\">\n              <p class=\"films__trailer-text\">Watch trailer</p>\n              <!-- <img src=\"\" alt=\"test\" class=\"films__trailer-icon\"> -->\n            </div>\n          </div>\n          <p class=\"films__title\">${movie.title}</p>\n          <div class=\"films__details\">\n            <p class=\"films__genres film-font-style\">${createMovieDetalisMarkup(\n              movie\n            )}</p>\n            <span class=\"films__rate\">${movie.vote_average.toFixed(1)}</span>\n          </div>\n        </li>`\n    )\n    .join(''));\n}\n\nexport function createMovieDetalisMarkup(movie) {\n  // console.log(movie.id);\n\n  const savedGenres = localStorage.getItem('saved-genres');\n  const genres = JSON.parse(savedGenres);\n\n  let movieGenres = [];\n  const movieReleaseYear = movie.release_date.slice(0, 4);\n\n  for (let i = 0; i < movie.genre_ids.length; i++) {\n    movieGenres.push(genres[movie.genre_ids[i]]);\n  }\n\n  let moviesGenresMarkup = '';\n\n  if (movieGenres.length > 2) {\n    moviesGenresMarkup = movieGenres.splice(0, 2).join(', ') + ', Other';\n  } else {\n    moviesGenresMarkup = movieGenres.join(', ');\n  }\n\n  if (movie.genre_ids.length === 0 && !movie.release_date) {\n    return '';\n  }\n\n  if (movie.genre_ids.length === 0 && movie.release_date) {\n    return movieReleaseYear;\n  }\n\n  if (movie.genre_ids.length !== 0 && !movie.release_date) {\n    return moviesGenresMarkup;\n  }\n\n  return moviesGenresMarkup + ' | ' + movieReleaseYear;\n}\n\nfunction checkPosterImg(posterPath) {\n  if (!posterPath) {\n    return 'https://i.postimg.cc/KYV47028/no-poster-available.jpg';\n  } else {\n    return `https://image.tmdb.org/t/p/w500/${posterPath}`;\n  }\n}\n","import { refs } from '../refs/refs';\nimport { renderMoviesCards } from '../createMoviesMarkup/renderMoviesCards';\n\nconst watched = document.querySelector('.watched-films');\nconst queue = document.querySelector('.queue-films');\nconst btnList = document.querySelector('.button-list');\n\nlet key = 'queue-films';\nqueue.classList.add('current-page');\nconst resp = localStorage.getItem(key);\nconst parseResp = JSON.parse(resp);\n\nif (!parseResp.length) {\n  fooError(key);\n} else {\n  try {\n    renderMoviesCards(parseResp);\n  } catch (error) {\n    fooError(key);\n  }\n}\n\nbtnList.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(e) {\n  e.preventDefault();\n  key = e.target.id;\n  console.dir(key);\n  selectCurrentPage(key);\n  const resp = localStorage.getItem(key);\n  const parseResp = JSON.parse(resp);\n  if (!parseResp.length) {\n    fooError(key);\n  } else {\n    try {\n      renderMoviesCards(parseResp);\n    } catch (error) {\n      fooError(key);\n    }\n  }\n}\n\nfunction fooError(key) {\n  return (refs.moviesList.innerHTML = `\n  <img src=\"https://kartinkof.club/uploads/posts/2022-03/1648361803_4-kartinkof-club-p-mem-obezyana-smotrit-v-storonu-5.jpg\" alt=\"monkey\" width=\"400\" height=\"200\">\n  <p>Opss... you haven't added any movies to ${key}</p>\n`);\n}\n\nfunction selectCurrentPage(id) {\n  if (id === watched.id) {\n    queue.classList.remove('current-page');\n    watched.classList.add('current-page');\n    queue.removeAttribute('disabled');\n    watched.setAttribute('disabled', 'disabled');\n  }\n\n  if (id === queue.id) {\n    watched.classList.remove('current-page');\n    queue.classList.add('current-page');\n    watched.removeAttribute('disabled');\n    queue.setAttribute('disabled', 'disabled');\n  }\n}\n","import { refs } from '../refs/refs';\n\nrefs.moviesList.addEventListener('click', openModalFilm);\n\nfunction openModalFilm(evt) {\n  refs.backdrop.classList.remove('is-hidden');\n  document.body.style.overflow = 'hidden';\n\n  const filmId = evt.target.closest('li').id;\n  const filmArray = JSON.parse(localStorage.getItem('saved-movies'));\n  const filmOpened = filmArray.find(film => film.id === Number(filmId));\n\n  renderModalFilm(filmOpened);\n  findGenres(filmOpened.genre_ids);\n  localStorageHandler(filmOpened);\n\n  document.addEventListener('click', closeModalFilm);\n  window.addEventListener('keydown', closeModalFilm);\n}\n\nfunction closeModalFilm(evt) {\n  if (\n    evt.target.matches('.modal__close-btn') ||\n    evt.target.matches('.modal__close-btn-icon') ||\n    evt.target.matches('.modal__close-btn-icon-svg') ||\n    evt.target.matches('.backdrop-modal-film') ||\n    evt.code === 'Escape'\n  ) {\n    refs.backdrop.classList.add('is-hidden');\n    document.body.style.overflow = 'auto';\n    clearModalFilm();\n  }\n}\n\nfunction renderModalFilm(film) {\n  return (refs.filmRendering.innerHTML = `\n        <div class=\"modal-img-wrapper\">\n          <img src=\"https://image.tmdb.org/t/p/w500/${\n            film.poster_path\n          }\" alt=\"film-poster\" />\n        </div>\n        <div class=\"modal__wrapper\">\n          <h2 class=\"modal__film-title\">${film.title}</h2>\n          <table class=\"modal__table\">\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Vote / Votes</td>\n              <td>\n                <div class=\"modal__vote-wrapper\">\n                  <p class=\"modal__vote\">${film.vote_average}</p>\n                  <p>/</p>\n                  <p class=\"modal__votes\">${film.vote_count}</p>\n                </div>\n              </td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Popularity</td>\n              <td>${Math.round(film.popularity * 10) / 10}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Original Title</td>\n              <td>${film.original_title}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Genre</td>\n              <td>${findGenres(film.genre_ids)}</td>\n            </tr>\n          </table>\n          <div>\n            <h3 class=\"modal__about-title\">About</h3>\n            <p class=\"modal__about-film\">\n              ${film.overview}\n            </p>\n          </div>\n          <div class=\"modal__buttons\">\n            <button class=\"modal-btn btn-watched\">${getWatchActionText(\n              film\n            )}</button>\n            <button class=\"modal-btn btn-queue\">${getQueueActiontext(\n              film\n            )}</button>\n          </div>\n        </div>`);\n}\n\nfunction clearModalFilm() {\n  return (refs.filmRendering.innerHTML = '');\n}\n\nfunction findGenres(filmGenreIds) {\n  const savedGenres = JSON.parse(localStorage.getItem('saved-genres'));\n  return filmGenreIds.map(genreId => savedGenres[genreId]).join(`, `);\n}\n\nfunction localStorageHandler(film) {\n  const toWatchedBtn = document.querySelector('.btn-watched');\n  const queueBtn = document.querySelector('.btn-queue');\n\n  const WATCHED_KEY = 'watched-films';\n  const QUEUE_KEY = 'queue-films';\n\n  toWatchedBtn.addEventListener('click', addToWatched);\n  queueBtn.addEventListener('click', addToQueue);\n\n  function addToWatched() {\n    let watchedData = JSON.parse(localStorage.getItem('watched-films')) || [];\n    if (!watchedData.find(item => item.id === film.id)) {\n      watchedData.push(film);\n    } else {\n      watchedData = watchedData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(WATCHED_KEY, JSON.stringify(watchedData));\n    toWatchedBtn.textContent = getWatchActionText(film);\n  }\n\n  function addToQueue() {\n    let queueData = JSON.parse(localStorage.getItem('queue-films')) || [];\n    if (!queueData.find(item => item.id === film.id)) {\n      queueData.push(film);\n    } else {\n      queueData = queueData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(QUEUE_KEY, JSON.stringify(queueData));\n    queueBtn.textContent = getQueueActiontext(film);\n  }\n}\n\nfunction getWatchActionText(film) {\n  let watchedData = JSON.parse(localStorage.getItem('watched-films')) || [];\n  return watchedData.find(item => item.id === film.id)\n    ? 'REMOVE FROM WATCHED'\n    : 'ADD TO WATCHED';\n}\n\nfunction getQueueActiontext(film) {\n  let queueData = JSON.parse(localStorage.getItem('queue-films')) || [];\n  return queueData.find(item => item.id === film.id)\n    ? 'REMOVE FROM QUEUE'\n    : 'ADD TO QUEUE';\n}\n"],"names":["$2b5a7c7de2dd1799$export$21666b427502ea6d","moviesList","document","querySelector","form","failureMassege","paginationBox","backdrop","closeBtn","filmRendering","$a98304d8102ce73d$export$3cfafeb53fa7e261","moviesObjects","innerHTML","map","movie","id","posterPath","poster_path","title","savedGenres","localStorage","getItem","genres","JSON","parse","movieGenres","movieReleaseYear","release_date","slice","i","genre_ids","length","push","moviesGenresMarkup","splice","join","$a98304d8102ce73d$export$9b3fe9cbd59bab40","vote_average","toFixed","$3aa6467ffa2597ff$var$watched","$3aa6467ffa2597ff$var$queue","$3aa6467ffa2597ff$var$btnList","$3aa6467ffa2597ff$var$key","classList","add","$3aa6467ffa2597ff$var$resp","$3aa6467ffa2597ff$var$parseResp","error","$3aa6467ffa2597ff$var$fooError","key1","$19d7d5247f356a90$var$closeModalFilm","evt","target","matches","code","body","style","overflow","$19d7d5247f356a90$var$findGenres","filmGenreIds","genreId","$19d7d5247f356a90$var$getWatchActionText","film","find","item","$19d7d5247f356a90$var$getQueueActiontext","addEventListener","e","preventDefault","console","dir","remove","removeAttribute","setAttribute","$3aa6467ffa2597ff$var$selectCurrentPage","resp1","parseResp1","filmId","closest","filmOpened","Number","vote_count","Math","round","popularity","original_title","overview","toWatchedBtn","queueBtn","WATCHED_KEY","QUEUE_KEY","addToWatched","watchedData","filter","setItem","stringify","textContent","addToQueue","queueData","$19d7d5247f356a90$var$localStorageHandler","window"],"version":3,"file":"library.f0a624f1.js.map"}