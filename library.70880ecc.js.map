{"mappings":"AAAA,MAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,iBAG9B,SAASC,EAAkBC,GAChC,OAAQL,EAAKC,WAAWK,UAAYD,EACjCE,KACCC,IAAS,iBAAWA,EAAMC,wGAwDRC,EArDRF,EAAMG,YAsDfD,EAGI,mCAAmCA,IAFnC,iWAhD2BF,EAAMI,+GAYrC,SAAkCJ,GACvC,MAAMK,EAAcC,aAAaC,QAAQ,gBACnCC,EAASC,KAAKC,MAAML,GAE1B,IAAIM,EAAc,GAClB,MAAMC,EAAmBZ,EAAMa,aAAaC,MAAM,EAAG,GAErD,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAMgB,UAAUC,OAAQF,IAC1CJ,EAAYO,KAAKV,EAAOR,EAAMgB,UAAUD,KAG1C,IAAII,EAAqB,GAGvBA,EADER,EAAYM,OAAS,EACFN,EAAYS,OAAO,EAAG,GAAGC,KAAK,MAAQ,UAEtCV,EAAYU,KAAK,MAGxC,OAA+B,IAA3BrB,EAAMgB,UAAUC,QAAiBjB,EAAMa,aAIZ,IAA3Bb,EAAMgB,UAAUC,QAAgBjB,EAAMa,aACjCD,EAGsB,IAA3BZ,EAAMgB,UAAUC,QAAiBjB,EAAMa,aAIpCM,EAAqB,MAAQP,EAH3BO,EARA,E,CA9B8CG,CACzCtB,mDAE0BA,EAAMuB,aAAaC,QAAQ,iDAyCrE,IAAwBtB,CAvCR,IAEXmB,KAAK,G,CC1BV,MAAMI,EAAO,CACXC,OAAQhC,SAASC,cAAc,YA0C1B,SAASgC,IACdF,EAAKC,OAAOE,UAAUC,OAAO,aAC7BJ,EAAKC,OAAOE,UAAUE,IAAI,O,CC1C5B,MAAMC,EAAUrC,SAASC,cAAc,kBACjCqC,EAAQtC,SAASC,cAAc,gBAC/BsC,EAAUvC,SAASC,cAAc,gBACjCuC,EAAWxC,SAASC,cAAc,gBAClCwC,EAAOzC,SAASC,cAAc,cAEpC,IAAIyC,EAAM,cACVJ,EAAMJ,UAAUE,IAAI,gBACpB,MAAMO,EAAO/B,aAAaC,QAAQ6B,GAC5BE,EAAY7B,KAAKC,MAAM2B,GAI7B,GAFAF,EAAKI,iBAAiB,QAASC,aAE1BF,EAAUrB,OAIb,IACErB,EAAkB0C,GAClBX,G,CACA,MAAOc,GACPC,EAASN,GACTT,G,MARFe,EAASN,GACTT,IA+BF,SAASe,EAASC,GAChB,OAAQT,EAASpC,UAAY,uNAEgB6C,S,CAvB/CV,EAAQM,iBAAiB,SAElB,SAAoBK,GACzBA,EAAEC,iBACFT,EAAMQ,EAAEE,OAAO7C,GACf8C,QAAQC,IAAIZ,GAsBd,SAA2BnC,GACrBA,IAAO8B,EAAQ9B,KACjB+B,EAAMJ,UAAUC,OAAO,gBACvBE,EAAQH,UAAUE,IAAI,gBACtBE,EAAMiB,gBAAgB,YACtBlB,EAAQmB,aAAa,WAAY,aAG/BjD,IAAO+B,EAAM/B,KACf8B,EAAQH,UAAUC,OAAO,gBACzBG,EAAMJ,UAAUE,IAAI,gBACpBC,EAAQkB,gBAAgB,YACxBjB,EAAMkB,aAAa,WAAY,Y,CAjCjCC,CAAkBf,GAClB,MAAMgB,EAAO9C,aAAaC,QAAQ6B,GAC5BiB,EAAY5C,KAAKC,MAAM0C,GAC7B,GAAKC,EAAUpC,OAGb,IACErB,EAAkByD,E,CAClB,MAAOZ,GACPC,EAASN,E,MALXM,EAASN,E,ICnCb,MAAMkB,EAAO,CACXC,SAAU7D,SAASC,cAAc,gBACjC6D,SAAU9D,SAASC,cAAc,wBACjC8D,cAAe/D,SAASC,cAAc,wBAIlC+D,EAAWhE,SAASC,cAAc,YAClCgE,EAAYjE,SAASC,cAAc,gBACnCiE,EAAclE,SAASC,cAAc,kBAsB3C,SAASkE,EAAeC,IAEpBA,EAAIhB,OAAOiB,QAAQ,sBACnBD,EAAIhB,OAAOiB,QAAQ,2BACnBD,EAAIhB,OAAOiB,QAAQ,+BACnBD,EAAIhB,OAAOiB,QAAQ,yBACN,WAAbD,EAAIE,QAEJV,EAAKE,SAAS5B,UAAUE,IAAI,aAC5BpC,SAASuE,KAAKC,MAAMC,SAAW,OAyDzBb,EAAKG,cAAc3D,UAAY,G,CAGzC,SAASsE,EAAWC,GAClB,MAAMhE,EAAcI,KAAKC,MAAMJ,aAAaC,QAAQ,iBACpD,OAAO8D,EAAatE,KAAIuE,GAAWjE,EAAYiE,KAAUjD,KAAK,K,CA2ChE,SAASkD,EAAmBC,GAE1B,OADkB/D,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,IACpDkE,MAAKC,GAAQA,EAAKzE,KAAOuE,EAAKvE,KAC7C,sBACA,gB,CAGN,SAAS0E,EAAmBH,GAE1B,OADgB/D,KAAKC,MAAMJ,aAAaC,QAAQ,iBAAmB,IAClDkE,MAAKC,GAAQA,EAAKzE,KAAOuE,EAAKvE,KAC3C,oBACA,c,CAjJNqD,EAAKC,SAAShB,iBAAiB,SAE/B,SAAuBuB,GACrB,GAA4B,QAAxBA,EAAIhB,OAAO8B,SAAoB,CACnCtB,EAAKE,SAAS5B,UAAUC,OAAO,aAC/BnC,SAASuE,KAAKC,MAAMC,SAAW,SAE/B,MAAMU,EAASf,EAAIhB,OAAOgC,QAAQ,MAAM7E,GAElC8E,EADYtE,KAAKC,MAAMJ,aAAaC,QAAQ,iBACrBkE,MAAKD,GAAQA,EAAKvE,KAAO+E,OAAOH,KA0BtCL,EAxBPO,EAyBRzB,EAAKG,cAAc3D,UAAY,kGAG7B0E,EAAKrE,oIAIyBqE,EAAKpE,mRAMJoE,EAAKjD,aAAaC,QAAQ,iFAEzBgD,EAAKS,+MAM7BC,KAAKC,MAAwB,GAAlBX,EAAKY,YAAmB,+JAInCZ,EAAKa,kKAILjB,EAAWI,EAAKxD,4LAMpBwD,EAAKc,2IAI+Bf,EACtCC,gEAEoCG,EACpCH,gDAnEZJ,EAAWW,EAAW/D,WAkFxB,SAA6BwD,GAC3B,MAAMe,EAAe7F,SAASC,cAAc,gBACtC6F,EAAW9F,SAASC,cAAc,cAElC8F,EAAc,gBACdC,EAAY,cAKlB,SAASC,IACP,IAAIC,EAAcnF,KAAKC,MAAMJ,aAAaC,QAAQ,mBAAqB,GAClEqF,EAAYnB,MAAKC,GAAQA,EAAKzE,KAAOuE,EAAKvE,KAG7C2F,EAAcA,EAAYC,QAAOnB,GAAQA,EAAKzE,KAAOuE,EAAKvE,KAF1D2F,EAAY1E,KAAKsD,GAInBlE,aAAawF,QAAQL,EAAahF,KAAKsF,UAAUH,IACjDL,EAAaS,YAAczB,EAAmBC,GAC1Cd,EAAS9B,UAAUqE,SAAS,YAAcrC,EAAYhC,UAAUqE,SAAS,iBAC3ErG,EAAkBgG,E,CAKtB,SAASM,IACP,IAAIC,EAAY1F,KAAKC,MAAMJ,aAAaC,QAAQ,iBAAmB,GAC9D4F,EAAU1B,MAAKC,GAAQA,EAAKzE,KAAOuE,EAAKvE,KAG3CkG,EAAYA,EAAUN,QAAOnB,GAAQA,EAAKzE,KAAOuE,EAAKvE,KAFtDkG,EAAUjF,KAAKsD,GAIjBlE,aAAawF,QAAQJ,EAAWjF,KAAKsF,UAAUI,IAC/CX,EAASQ,YAAcrB,EAAmBH,GAClCd,EAAS9B,UAAUqE,SAAS,YAActC,EAAU/B,UAAUqE,SAAS,iBAC7ErG,EAAkBuG,E,CA5BtBZ,EAAahD,iBAAiB,QAASoD,GACvCH,EAASjD,iBAAiB,QAAS2D,E,CAzFnCE,CAAoBrB,GAEpBrF,SAAS6C,iBAAiB,QAASsB,GACnCwC,OAAO9D,iBAAiB,UAAWsB,E,CAmBrC,IAAyBW,C","sources":["src/js/createMoviesMarkup/renderMoviesCards.js","src/js/common/common.js","src/js/renderQueueWatchedFilms/renderQueueWachedFilms.js","src/js/modalFilm/renderModalFilm.js"],"sourcesContent":["const refs = {\n  moviesList: document.querySelector('.films__list'),\n};\n\nexport function renderMoviesCards(moviesObjects) {\n  return (refs.moviesList.innerHTML = moviesObjects\n    .map(\n      movie => `<li id='${movie.id}' class=\"films__card\">\n            <div class=\"films__overflow-wrapper\">\n              <img src=\"${checkPosterImg(\n                movie.poster_path\n              )}\"  alt=\"film poster\" class=\"films__picture\" />\n              <div class=\"films__overlay\">\n                <p class=\"films__trailer-text\">Watch trailer</p>\n                <img scr alt class=\"films__trailer-icon\">\n              </div>\n            </div>\n            <p class=\"films__title\">${movie.title}</p>\n            <div class=\"films__details\">\n              <p class=\"films__genres film-font-style\">${createMovieDetalisMarkup(\n                movie\n              )}</p>\n              <span class=\"films__rate\">${movie.vote_average.toFixed(1)}</span>\n            </div>\n          </li>`\n    )\n    .join(''));\n}\n\nexport function createMovieDetalisMarkup(movie) {\n  const savedGenres = localStorage.getItem('saved-genres');\n  const genres = JSON.parse(savedGenres);\n\n  let movieGenres = [];\n  const movieReleaseYear = movie.release_date.slice(0, 4);\n\n  for (let i = 0; i < movie.genre_ids.length; i++) {\n    movieGenres.push(genres[movie.genre_ids[i]]);\n  }\n\n  let moviesGenresMarkup = '';\n\n  if (movieGenres.length > 2) {\n    moviesGenresMarkup = movieGenres.splice(0, 2).join(', ') + ', Other';\n  } else {\n    moviesGenresMarkup = movieGenres.join(', ');\n  }\n\n  if (movie.genre_ids.length === 0 && !movie.release_date) {\n    return '';\n  }\n\n  if (movie.genre_ids.length === 0 && movie.release_date) {\n    return movieReleaseYear;\n  }\n\n  if (movie.genre_ids.length !== 0 && !movie.release_date) {\n    return moviesGenresMarkup;\n  }\n\n  return moviesGenresMarkup + ' | ' + movieReleaseYear;\n}\n\nfunction checkPosterImg(posterPath) {\n  if (!posterPath) {\n    return 'https://i.postimg.cc/KYV47028/no-poster-available.jpg';\n  } else {\n    return `https://image.tmdb.org/t/p/w500/${posterPath}`;\n  }\n}\n","const refs = {\n  loader: document.querySelector('.loader'),\n};\n\nconst DATA_KEY = 'saved-data';\n\nexport function saveMoviesToLoсalStorage(movies) {\n  const MOVIES_KEY = 'saved-movies';\n\n  localStorage.setItem(MOVIES_KEY, JSON.stringify(movies));\n}\n\nexport function setLocalData(data) {\n  localStorage.setItem(DATA_KEY, JSON.stringify(data));\n}\n\nexport function getLocalData() {\n  data = JSON.parse(localStorage.getItem(DATA_KEY));\n\n  return data;\n}\n\nexport function removeLocalData() {\n  localStorage.removeItem(DATA_KEY);\n}\n\nexport function scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nexport function showLoadSpinner() {\n  refs.loader.classList.remove('hide');\n}\n\nexport function hideLoadSpinner() {\n  setTimeout(() => {\n    refs.loader.classList.add('hide');\n  }, 1000);\n}\n\nexport function hidePageLoadSpinner() {\n  refs.loader.classList.remove('page-load');\n  refs.loader.classList.add('hide');\n}\n","import { renderMoviesCards } from '../createMoviesMarkup/renderMoviesCards';\nimport { hidePageLoadSpinner } from '../common/common';//onLogoClick\n\nconst watched = document.querySelector('.watched-films');\nconst queue = document.querySelector('.queue-films');\nconst btnList = document.querySelector('.button-list');\nconst librList = document.querySelector('.films__list');\nconst logo = document.querySelector('.logo-link');\n\nlet key = 'queue-films';\nqueue.classList.add('current-page');\nconst resp = localStorage.getItem(key);\nconst parseResp = JSON.parse(resp);\n\nlogo.addEventListener('click', onLogoClick);\n\nif (!parseResp.length) {\n  fooError(key);\n  hidePageLoadSpinner();\n} else {\n  try {\n    renderMoviesCards(parseResp);\n    hidePageLoadSpinner();\n  } catch (error) {\n    fooError(key);\n    hidePageLoadSpinner();\n  }\n}\n\nbtnList.addEventListener('click', onBtnClick);\n\nexport function onBtnClick(e) {\n  e.preventDefault();\n  key = e.target.id;\n  console.dir(key);\n  selectCurrentPage(key);\n  const resp = localStorage.getItem(key);\n  const parseResp = JSON.parse(resp);\n  if (!parseResp.length) {\n    fooError(key);\n  } else {\n    try {\n      renderMoviesCards(parseResp);\n    } catch (error) {\n      fooError(key);\n    }\n  }\n}\n\nfunction fooError(key) {\n  return (librList.innerHTML = `\n  <img src=\"https://kartinkof.club/uploads/posts/2022-03/1648361803_4-kartinkof-club-p-mem-obezyana-smotrit-v-storonu-5.jpg\" alt=\"monkey\" width=\"400\" height=\"200\">\n  <p>Opss... you haven't added any movies to ${key}</p>\n`);\n}\n\nfunction selectCurrentPage(id) {\n  if (id === watched.id) {\n    queue.classList.remove('current-page');\n    watched.classList.add('current-page');\n    queue.removeAttribute('disabled');\n    watched.setAttribute('disabled', 'disabled');\n  }\n\n  if (id === queue.id) {\n    watched.classList.remove('current-page');\n    queue.classList.add('current-page');\n    watched.removeAttribute('disabled');\n    queue.setAttribute('disabled', 'disabled');\n  }\n}\n","import { renderMoviesCards } from '../createMoviesMarkup/renderMoviesCards';  \n\n\n\nconst refs = {\n  filmCard: document.querySelector('.films__list'),\n  backdrop: document.querySelector('.backdrop-modal-film'),\n  filmRendering: document.querySelector('.film-render-markup'),\n  // librPage: document.querySelector('.js-libr'),\n};\n\nconst librPage = document.querySelector(\"#js-libr\");\nconst queuePage = document.querySelector(\"#queue-films\");\nconst watchedPage = document.querySelector(\"#watched-films\");\n\nrefs.filmCard.addEventListener('click', openModalFilm);\n\nfunction openModalFilm(evt) {\n  if (evt.target.nodeName === 'IMG') {\n  refs.backdrop.classList.remove('is-hidden');\n  document.body.style.overflow = 'hidden';\n\n  const filmId = evt.target.closest('li').id;\n  const filmArray = JSON.parse(localStorage.getItem('saved-movies'));\n  const filmOpened = filmArray.find(film => film.id === Number(filmId));\n  \n  renderModalFilm(filmOpened);\n  findGenres(filmOpened.genre_ids);\n  localStorageHandler(filmOpened);\n\n  document.addEventListener('click', closeModalFilm);\n  window.addEventListener('keydown', closeModalFilm);\n  }\n}\n\nfunction closeModalFilm(evt) {\n  if (\n    evt.target.matches('.modal__close-btn') ||\n    evt.target.matches('.modal__close-btn-icon') ||\n    evt.target.matches('.modal__close-btn-icon-svg') ||\n    evt.target.matches('.backdrop-modal-film') ||\n    evt.code === 'Escape'\n  ) {\n    refs.backdrop.classList.add('is-hidden');\n    document.body.style.overflow = 'auto';\n    clearModalFilm();\n\n  }\n} \n\nfunction renderModalFilm(film) {\n  return (refs.filmRendering.innerHTML = `\n        <div class=\"modal-img-wrapper\">\n          <img src=\"https://image.tmdb.org/t/p/w500/${\n            film.poster_path\n          }\" alt=\"film-poster\" />\n        </div>\n        <div class=\"modal__wrapper\">\n          <h2 class=\"modal__film-title\">${film.title}</h2>\n          <table class=\"modal__table\">\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Vote / Votes</td>\n              <td>\n                <div class=\"modal__vote-wrapper\">\n                  <p class=\"modal__vote\">${film.vote_average.toFixed(1)}</p>\n                  <p>/</p>\n                  <p class=\"modal__votes\">${film.vote_count}</p>\n                </div>\n              </td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Popularity</td>\n              <td>${Math.round(film.popularity * 10) / 10}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Original Title</td>\n              <td>${film.original_title}</td>\n            </tr>\n            <tr class=\"modal__table-row\">\n              <td class=\"modal__first-column\">Genre</td>\n              <td>${findGenres(film.genre_ids)}</td>\n            </tr>\n          </table>\n          <div>\n            <h3 class=\"modal__about-title\">About</h3>\n            <p class=\"modal__about-film\">\n              ${film.overview}\n            </p>\n          </div>\n          <div class=\"modal__buttons\">\n            <button class=\"modal-btn btn-watched\">${getWatchActionText(\n              film\n            )}</button>\n            <button class=\"modal-btn btn-queue\">${getQueueActiontext(\n              film\n            )}</button>\n          </div>\n        </div>`);\n}\n\nfunction clearModalFilm() {\n  return (refs.filmRendering.innerHTML = '');\n}\n\nfunction findGenres(filmGenreIds) {\n  const savedGenres = JSON.parse(localStorage.getItem('saved-genres'));\n  return filmGenreIds.map(genreId => savedGenres[genreId]).join(`, `);\n}\n\nfunction localStorageHandler(film) {\n  const toWatchedBtn = document.querySelector('.btn-watched');\n  const queueBtn = document.querySelector('.btn-queue');\n\n  const WATCHED_KEY = 'watched-films';\n  const QUEUE_KEY = 'queue-films';\n\n  toWatchedBtn.addEventListener('click', addToWatched);\n  queueBtn.addEventListener('click', addToQueue);\n\n  function addToWatched() {\n    let watchedData = JSON.parse(localStorage.getItem('watched-films')) || [];\n    if (!watchedData.find(item => item.id === film.id)) {\n      watchedData.push(film);\n    } else {\n      watchedData = watchedData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(WATCHED_KEY, JSON.stringify(watchedData));\n    toWatchedBtn.textContent = getWatchActionText(film);\n    if (librPage.classList.contains(\"current\") && watchedPage.classList.contains(\"current-page\")) {\n      renderMoviesCards(watchedData);\n    }\n\n  }\n\n  function addToQueue() {\n    let queueData = JSON.parse(localStorage.getItem('queue-films')) || [];\n    if (!queueData.find(item => item.id === film.id)) {\n      queueData.push(film);\n    } else {\n      queueData = queueData.filter(item => item.id !== film.id);\n    }\n    localStorage.setItem(QUEUE_KEY, JSON.stringify(queueData));\n    queueBtn.textContent = getQueueActiontext(film);\n        if (librPage.classList.contains(\"current\") && queuePage.classList.contains(\"current-page\")) {\n      renderMoviesCards(queueData);\n    }\n  }\n}\n\nfunction getWatchActionText(film) {\n  let watchedData = JSON.parse(localStorage.getItem('watched-films')) || [];\n  return watchedData.find(item => item.id === film.id)\n    ? 'REMOVE FROM WATCHED'\n    : 'ADD TO WATCHED';\n}\n\nfunction getQueueActiontext(film) {\n  let queueData = JSON.parse(localStorage.getItem('queue-films')) || [];\n  return queueData.find(item => item.id === film.id)\n    ? 'REMOVE FROM QUEUE'\n    : 'ADD TO QUEUE';\n}\n"],"names":["$a98304d8102ce73d$var$refs","moviesList","document","querySelector","$a98304d8102ce73d$export$3cfafeb53fa7e261","moviesObjects","innerHTML","map","movie","id","posterPath","poster_path","title","savedGenres","localStorage","getItem","genres","JSON","parse","movieGenres","movieReleaseYear","release_date","slice","i","genre_ids","length","push","moviesGenresMarkup","splice","join","$a98304d8102ce73d$export$9b3fe9cbd59bab40","vote_average","toFixed","$ef771c2d53285031$var$refs","loader","$ef771c2d53285031$export$e9fb7a62e5b108dc","classList","remove","add","$3aa6467ffa2597ff$var$watched","$3aa6467ffa2597ff$var$queue","$3aa6467ffa2597ff$var$btnList","$3aa6467ffa2597ff$var$librList","$3aa6467ffa2597ff$var$logo","$3aa6467ffa2597ff$var$key","$3aa6467ffa2597ff$var$resp","$3aa6467ffa2597ff$var$parseResp","addEventListener","onLogoClick","error","$3aa6467ffa2597ff$var$fooError","key1","e","preventDefault","target","console","dir","removeAttribute","setAttribute","$3aa6467ffa2597ff$var$selectCurrentPage","resp1","parseResp1","$19d7d5247f356a90$var$refs","filmCard","backdrop","filmRendering","$19d7d5247f356a90$var$librPage","$19d7d5247f356a90$var$queuePage","$19d7d5247f356a90$var$watchedPage","$19d7d5247f356a90$var$closeModalFilm","evt","matches","code","body","style","overflow","$19d7d5247f356a90$var$findGenres","filmGenreIds","genreId","$19d7d5247f356a90$var$getWatchActionText","film","find","item","$19d7d5247f356a90$var$getQueueActiontext","nodeName","filmId","closest","filmOpened","Number","vote_count","Math","round","popularity","original_title","overview","toWatchedBtn","queueBtn","WATCHED_KEY","QUEUE_KEY","addToWatched","watchedData","filter","setItem","stringify","textContent","contains","addToQueue","queueData","$19d7d5247f356a90$var$localStorageHandler","window"],"version":3,"file":"library.70880ecc.js.map"}